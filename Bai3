from abc import ABC, abstractmethod

class SinhVien(ABC):
    def __init__(self, ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb):
        self.ma_sv = ma_sv
        self.ho_ten = ho_ten
        self.dia_chi = dia_chi
        self.tong_tin_chi = tong_tin_chi
        self.diem_tb = diem_tb

    def nhap(self):
    
        pass

    def xuat(self):
        
        print(f"Ma SV: {self.ma_sv}, Ho Ten: {self.ho_ten}, Dia Chi: {self.dia_chi}, "
              f"Tong Tin Chi: {self.tong_tin_chi}, Diem TB: {self.diem_tb}", end="")

    @abstractmethod
    def xet_tot_nghiep(self):
     
        pass

    def get_diem_tb(self):
        return self.diem_tb

    def is_dh(self):
      
        return False

class SinhVienVB2(SinhVien):
    def __init__(self, ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb, diem_thi_tn):
        super().__init__(ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb)
        self.diem_thi_tn = diem_thi_tn

    def xuat(self):
        super().xuat()
        print(f", Diem Thi TN: {self.diem_thi_tn} (He VB2)")

    def xet_tot_nghiep(self):
        return self.tong_tin_chi >= 84 and self.diem_tb >= 5 and self.diem_thi_tn >= 5

    @staticmethod
    def nhap_sv():
       
        print("--- Nhap thong tin SV Van Bang 2 ---")
        ma_sv = input("Nhap Ma SV: ")
        ho_ten = input("Nhap Ho Ten: ")
        dia_chi = input("Nhap Dia Chi: ")
        tong_tin_chi = int(input("Nhap Tong So Tin Chi: "))
        diem_tb = float(input("Nhap Diem Trung Binh: "))
        diem_thi_tn = float(input("Nhap Diem Thi Tot Nghiep: "))
        return SinhVienVB2(ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb, diem_thi_tn)


class SinhVienDH(SinhVien):
    def __init__(self, ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb, ten_luan_van, diem_luan_van):
        super().__init__(ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb)
        self.ten_luan_van = ten_luan_van
        self.diem_luan_van = diem_luan_van

    def xuat(self):
        super().xuat()
        print(f", Ten Luan Van: {self.ten_luan_van}, Diem Luan Van: {self.diem_luan_van} (He Dai Hoc)")

    def xet_tot_nghiep(self):
       
        return self.tong_tin_chi >= 120 and self.diem_tb >= 5 and self.diem_luan_van >= 5

    def is_dh(self):
        return True

    @staticmethod
    def nhap_sv():

        print("--- Nhap thong tin SV Dai Hoc ---")
        ma_sv = input("Nhap Ma SV: ")
        ho_ten = input("Nhap Ho Ten: ")
        dia_chi = input("Nhap Dia Chi: ")
        tong_tin_chi = int(input("Nhap Tong So Tin Chi: "))
        diem_tb = float(input("Nhap Diem Trung Binh: "))
        ten_luan_van = input("Nhap Ten Luan Van: ")
        diem_luan_van = float(input("Nhap Diem Luan Van: "))
        return SinhVienDH(ma_sv, ho_ten, dia_chi, tong_tin_chi, diem_tb, ten_luan_van, diem_luan_van)

class QuanLySinhVien:
    def __init__(self):
        self.ds_sv = []

  
    def tao_danh_sach(self):
        while True:
            try:
                lua_chon = int(input("\nChon loai sinh vien (1: Dai Hoc, 2: VB2, 0: Quay lai): "))
                if lua_chon == 0:
                    break
                elif lua_chon == 1:
                    sv_moi = SinhVienDH.nhap_sv()
                elif lua_chon == 2:
                    sv_moi = SinhVienVB2.nhap_sv()
                else:
                    print("Lua chon khong hop le.")
                    continue
                
                self.ds_sv.append(sv_moi)
                print("==> Da them sinh vien.")
            except ValueError:
                print("Du lieu nhap vao khong hop le, vui long thu lai.")
            except Exception as e:
                print(f"Co loi xay ra: {e}")

    def xuat_danh_sach(self):
        if not self.ds_sv:
            print("Danh sach rong.")
            return
        print("\n--- DANH SACH SINH VIEN ---")
        for sv in self.ds_sv:
            sv.xuat()

 
    def xuat_ds_du_dieu_kien(self):
        print("\n--- DS SINH VIEN DU DIEU KIEN TOT NGHIEP ---")
        ds_tot_nghiep = [sv for sv in self.ds_sv if sv.xet_tot_nghiep()]
        
        if not ds_tot_nghiep:
            print("Khong co sinh vien nao du dieu kien.")
            return
        for sv in ds_tot_nghiep:
            sv.xuat()

   
    def xuat_ds_khong_du_dieu_kien(self):
        print("\n--- DS SINH VIEN KHONG DU DIEU KIEN TOT NGHIEP ---")
        ds_chua_tot_nghiep = [sv for sv in self.ds_sv if not sv.xet_tot_nghiep()]
        
        if not ds_chua_tot_nghiep:
            print("Tat ca sinh vien deu du dieu kien.")
            return
        for sv in ds_chua_tot_nghiep:
            sv.xuat()

   
    def tim_svdh_diem_tb_cao_nhat(self):
        print("\n--- SV DAI HOC CO DIEM TRUNG BINH CAO NHAT ---")
        
        ds_svdh = [sv for sv in self.ds_sv if sv.is_dh()]
        
        if not ds_svdh:
            print("Khong co sinh vien he Dai Hoc trong danh sach.")
            return

        sv_max = max(ds_svdh, key=lambda sv: sv.get_diem_tb())
        
        sv_max.xuat()


def hien_thi_menu():
    print("\n=========== MENU CHUONG TRINH ===========")
    print("1. Tao danh sach sinh vien")
    print("2. Xuat danh sach cac sinh vien")
    print("3. Xuat DS sinh vien du dieu kien tot nghiep (Yeu cau 3, 8)")
    print("4. Xuat DS sinh vien khong du dieu kien tot nghiep (Yeu cau 4, 7)")
    print("5. Tim sinh vien Dai Hoc co diem trung binh cao nhat")
    print("0. Thoat")
    print("=========================================")

def main():
    qlsv = QuanLySinhVien()
    while True:
        hien_thi_menu()
        try:
            lua_chon = int(input("Lua chon cua ban: "))
            
            if lua_chon == 1:
                qlsv.tao_danh_sach()
            elif lua_chon == 2:
                qlsv.xuat_danh_sach()
            elif lua_chon == 3:
                qlsv.xuat_ds_du_dieu_kien()
            elif lua_chon == 4:
                qlsv.xuat_ds_khong_du_dieu_kien()
            elif lua_chon == 5:
                qlsv.tim_svdh_diem_tb_cao_nhat()
            elif lua_chon == 0:
                print("Tam biet!")
                break
            else:
                print("Lua chon khong hop le. Vui long chon lai.")
        
        except ValueError:
            print("Vui long nhap mot so nguyen.")
        except Exception as e:
            print(f"Da xay ra loi: {e}")

if __name__ == "__main__":
    main()